<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beast version="2.7">

<map name="Uniform" >beast.base.inference.distribution.Uniform</map>
<map name="Exponential" >beast.base.inference.distribution.Exponential</map>
<map name="LogNormal" >beast.base.inference.distribution.LogNormalDistributionModel</map>
<map name="Normal" >beast.base.inference.distribution.Normal</map>
<map name="Beta" >beast.base.inference.distribution.Beta</map>
<map name="Gamma" >beast.base.inference.distribution.Gamma</map>
<map name="LaplaceDistribution" >beast.base.inference.distribution.LaplaceDistribution</map>
<map name="prior" >beast.base.inference.distribution.Prior</map>
<map name="InverseGamma" >beast.base.inference.distribution.InverseGamma</map>
<map name="OneOnX" >beast.base.inference.distribution.OneOnX</map>


<!-- input data -->
<data  id="alignment" spec="feast.fileio.AlignmentFromNexus"
  name="alignment" fileName="simulationOutput/tree_12.alignment.nexus">
  <userDataType spec="tidetree.evolution.datatype.EditData" nrOfStates="52"/>
</data>

<!-- define set of cells based on alignment -->
<taxa id="taxonSet" spec="beast.base.evolution.alignment.TaxonSet">
    <alignment idref="alignment"/>
</taxa>

<!-- specify tip dates -->
<traitSet id="dateTrait" spec="beast.base.evolution.tree.TraitSet"
  taxa="@taxonSet" traitname="date-forward" value="0=40"/>

<!-- specify tip types -->
<traitSet id="typeTrait" spec="feast.fileio.TraitSetFromXSV" fileName="simulationOutput/tree_12.types.csv" sep=","
  taxa="@taxonSet" traitname="type"/>


<!-- run MCMC -->
<run id="mcmc" spec="beast.base.inference.MCMC" chainLength="100000000" numInitializationAttempts="100">

  <operatorschedule spec="beast.base.evolution.operator.kernel.BactrianOperatorSchedule"/>

  <!-- 1. define state node -->
  <state id="state" spec="beast.base.inference.State" storeEvery="5000">

    <!-- build starting tree -->
    <stateNode id="tree" spec="tidetree.tree.StartingTree"
      rootHeight="40" taxa="@alignment" editHeight="40" editDuration="40" sequencesAreClustered="false">
      <taxonset idref="taxonSet"/>
      <trait idref="dateTrait"/>
    </stateNode>

    <!-- editing model parameters -->
    <parameter id="scarringProbs" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="10">
      0.0021 0.0078 0.0812 0.0105 0.0039 0.0309 0.0025 0.0513 0.0021 0.0731
      0.0441 0.0038 0.0195 0.0455 0.0072 0.0210 0.0136 0.0116 0.0065 0.0014
      0.0225 0.0056 0.0067 0.0370 0.0189 0.0281 0.0070 0.0132 0.0002 0.0099
      0.0397 0.0190 0.0099 0.0017 0.0160 0.0359 0.0001 0.0063 0.0006 0.0494
      0.0396 0.0027 0.0148 0.0391 0.0421 0.0360 0.0032 0.0242 0.0004 0.0306
    </parameter>

    <parameter id="lossRate" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="10" value="0"/>

    <parameter id="editRate" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="10" value="0.01"/>

    <!--<parameter id="scarringHeight" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="100" value="40"/>

    <parameter id="scarringDuration" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="100" value="40"/> -->

    <!-- population process parameters -->
    <parameter id="birthRate" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="Infinity" value="0.5 0.5 0.5 0.5"/>

    <parameter id="deathRate" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="Infinity" value="0.01 0.01 0.01 0.01"/>

    <parameter id="migrationRate.distinct" spec="beast.base.inference.parameter.RealParameter"
      name="stateNode" upper="1"
      value="  0.05 0.05 0.05
             0   0 0
             0 0   0
             0 0 0 "/> <!-- distinct types  -->

    <parameter id="migrationRate.hierarchical" spec="beast.base.inference.parameter.RealParameter"
      name="stateNode" upper="1"
      value="  0.05 0 0
             0   0.05 0
             0 0   0.05
             0 0 0     "/> <!-- hierarchical types -->

    <parameter id="rho" spec="beast.base.inference.parameter.RealParameter"
      lower="0.0" name="stateNode" upper="1.0" value="0.1 0.1 0.1 0.1"/>  <!-- sampling proportion -->

	  <!-- fix origin to experiment duration
    40.001 is chosen because the starting tree class sets the tree height to 40.0 and the origin has to be > than the tree heigth -->
    <parameter id="origin" spec="beast.base.inference.parameter.RealParameter"
      lower="40.0" name="stateNode" upper="40.001" value="40.001"/>

  </state>


  <!-- for initialization repeats -->
  <init spec="feast.parameter.InitRandomRealParameter" initial="@birthRate">
      <Uniform name="distr" lower="0.05" upper="0.5"/>
  </init>

  <init spec="feast.parameter.InitRandomRealParameter" initial="@deathRate">
      <Uniform name="distr" lower="0" upper="0.1"/>
  </init>

  <init spec="feast.parameter.InitRandomRealParameter" initial="@editRate">
      <Uniform name="distr" lower="0" upper="0.25"/>
  </init>

  <!--<init spec="feast.parameter.InitRandomRealParameter" initial="@scarringHeight">
      <Uniform name="distr" lower="20" upper="40"/>
  </init>

  <init spec="feast.parameter.InitRandomRealParameter" initial="@scarringDuration">
      <Uniform name="distr" lower="20" upper="40"/>
  </init> -->



  <!-- 2. define distributions -->
  <distribution id="posterior" spec="beast.base.inference.CompoundDistribution">

    <!-- PRIORS -->
    <distribution id="prior" spec="beast.base.inference.CompoundDistribution" useThreads='true'>

      <!-- tree prior -->
      <distribution id="birthDeathMigration" spec="bdmmprime.distribution.BirthDeathMigrationDistribution"
        conditionOnSurvival="True" frequencies="1.0 0 0 0" tree="@tree"
        typeTraitSet="@typeTrait" storeNodeTypes="true">

        <parameterization spec="bdmmprime.parameterization.CanonicalParameterization"
          processLength="@origin">

          <typeSet id="typeSet" spec="bdmmprime.parameterization.TypeSet" value="0,1,2,3" typeTraitSet="@typeTrait"/>

          <birthRate spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="@birthRate" timesAreAges="false"/>
          <deathRate spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="@deathRate" timesAreAges="false"/>
          <migrationRate spec="bdmmprime.parameterization.SkylineMatrixParameter"
            skylineValues="@migrationRate.distinct" timesAreAges="false"/>

          <!-- no sampling through time -->
          <samplingRate spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="0 0 0 0" timesAreAges="false"/>
          <rhoSampling spec="bdmmprime.parameterization.TimedParameter"
            times="0" timesAreAges="true" processLength="@origin" values="@rho"/>
          <removalProb spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="1 1 1 1" timesAreAges="false"/>

        </parameterization>
      </distribution>

      <!-- prior on substitution model parameters -->
      <prior id="editRatePrior" name="distribution" x="@editRate" spec="bdmmprime.util.priors.SmartZeroExcludingPrior">
        <LogNormal id="editLogNormal" name="distr" M="-3" S="1"/></prior> <!-- [0.01, 0.26] -->

      <!-- prior on phylodynamic parameters -->
      <prior id="birthRatePrior" name="distribution" x="@birthRate" spec="bdmmprime.util.priors.SmartZeroExcludingPrior">
        <LogNormal id="birthLogNormal" name="distr" M="-1.5" S="1"/></prior> <!-- [0.04, 1.16] -->

      <prior id="deathRatePrior" name="distribution" x="@deathRate" spec="bdmmprime.util.priors.SmartZeroExcludingPrior">
        <Exponential id="deathExp" name="distr" mean="0.04"/></prior> <!-- [0.002, 0.12] -->

      <prior id="migrationRatePrior" name="distribution" x="@migrationRate.distinct" spec="bdmmprime.util.priors.SmartZeroExcludingPrior">
        <LogNormal id="migrationLogNormal" name="distr" M="-3.25" S="1"/></prior> <!-- [0.007, 0.2] -->

    </distribution>

    <!-- Tree likelihood -->
    <distribution id="likelihood" spec="beast.base.inference.CompoundDistribution" useThreads='true'>

      <distribution id="treeLikelihood" spec="tidetree.distributions.TreeLikelihoodWithEditWindow"
        data="@alignment" tree="@tree" origin="@origin">

        <siteModel spec="beast.base.evolution.sitemodel.SiteModel">
          <mutationRate idref="editRate"/>
          <parameter name="proportionInvariant" spec="beast.base.inference.parameter.RealParameter"
            estimate="false" lower="0.0" upper="1.0" value="0.0"/>
          <substModel id="scarringModel" spec="tidetree.substitutionmodel.EditAndSilencingModel"
            editRates="@scarringProbs" silencingRate="@lossRate"
            editHeight="40" editDuration="40">
            <frequencies spec="beast.base.evolution.substitutionmodel.Frequencies" frequencies="1.0 0 0" estimate="false"/>
          </substModel>
        </siteModel>

        <branchRateModel spec="beast.base.evolution.branchratemodel.StrictClockModel" clock.rate="1.0"/>
      </distribution>
    </distribution>
  </distribution>


  <!-- 3. define operators-->
  <!-- tree operators -->
  <operator spec="beast.base.evolution.operator.WilsonBalding" tree="@tree" weight="30.0"/>
  <operator spec="beast.base.evolution.operator.Uniform" tree="@tree" weight="30.0"/>
  <operator spec="beast.base.evolution.operator.SubtreeSlide" tree="@tree" weight="3.0"/>
  <operator spec="beast.base.evolution.operator.Exchange" isNarrow="false" tree="@tree" weight="30.0"/>
  <operator spec="beast.base.evolution.operator.ScaleOperator" rootOnly="true" tree="@tree" weight="3.0"/>

  <!-- substitution model operators -->
  <operator id="editRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@editRate" scaleFactor="0.8" weight="3.0"/>

  <!-- phylodynamic operators -->
  <operator id="birthRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@birthRate" scaleFactor="0.8" weight="3.0"/>
  <operator id="deathRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@deathRate" scaleFactor="0.8" weight="3.0"/>
  <operator id="migrationRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@migrationRate.distinct" scaleFactor="0.8" weight="3.0"/>

  <operator id="udBD" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="10.0">
    <up idref="birthRate"/>
    <down idref="deathRate"/>
  </operator>

  <operator id="uuBD" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="10.0">
    <up idref="birthRate"/>
    <up idref="deathRate"/>
  </operator>

  <operator id="udMM" spec="beast.base.inference.operator.UpDownOperator"
    scaleFactor="0.8" weight="10.0" elementWise="true" differentRandomIndex="true">
    <up idref="migrationRate.distinct"/>
    <down idref="migrationRate.distinct"/>
  </operator>

  <operator id="udMD" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="3.0">
    <up idref="migrationRate.distinct"/>
    <down idref="deathRate"/>
  </operator>

  <operator id="udMB" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="3.0">
    <up idref="migrationRate.distinct"/>
    <down idref="birthRate"/>
  </operator>



  <!-- 4. define loggers -->
  <!-- trace logger -->
  <logger id="tracelog" spec="beast.base.inference.Logger" fileName="inferenceOutput/tree_12.inference.log" logEvery="5000">
    <log idref="posterior"/>
    <log idref="likelihood"/>
    <log idref="prior"/>

    <!-- tree parameter logger -->
    <log idref="treeLikelihood"/>
    <log id="treeStats" spec="beast.base.evolution.tree.TreeStatLogger" tree="@tree"/>

    <!-- substitution and phylodynamic parameter logger -->
    <log idref="editRate" />
    <log idref="birthRate"/>
    <log idref="deathRate"/>
    <log idref="migrationRate.distinct"/>
  </logger>

  <!-- screen logger -->
  <logger id="screenlog" spec="beast.base.inference.Logger" logEvery="1000">
    <log idref="posterior"/>
    <log id="ESS" spec="beast.base.inference.util.ESS" arg="@posterior"/>
    <log idref="likelihood"/>
    <log idref="prior"/>
  </logger>

  <!-- tree logger -->
  <logger id="treelog" spec="beast.base.inference.Logger" fileName="inferenceOutput/tree_12.inference.trees" logEvery="5000" mode="tree">
    <log idref="tree" printMetaData="true"/>
  </logger>

</run>

</beast>
