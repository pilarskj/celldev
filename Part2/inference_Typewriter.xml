<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beast version="2.7">

<map name="Uniform" >beast.base.inference.distribution.Uniform</map>
<map name="Exponential" >beast.base.inference.distribution.Exponential</map>
<map name="LogNormal" >beast.base.inference.distribution.LogNormalDistributionModel</map>
<map name="Normal" >beast.base.inference.distribution.Normal</map>
<map name="Beta" >beast.base.inference.distribution.Beta</map>
<map name="Gamma" >beast.base.inference.distribution.Gamma</map>
<map name="LaplaceDistribution" >beast.base.inference.distribution.LaplaceDistribution</map>
<map name="prior" >beast.base.inference.distribution.Prior</map>
<map name="InverseGamma" >beast.base.inference.distribution.InverseGamma</map>
<map name="OneOnX" >beast.base.inference.distribution.OneOnX</map>


<!-- input data -->
<plate var="n" range="1:20">
  <data  id="alignment.$(n)" spec="feast.fileio.AlignmentFromNexus" name="alignment"
    fileName="Typewriter/$(prototype)/simulationOutput/tree_$(seed).alignment_$(n).nexus">
    <userDataType spec="tidetree.evolution.datatype.EditData" nrOfStates="14"/>
  </data>
</plate>

<!-- define set of cells based on alignment -->
<taxa id="taxonSet" spec="beast.base.evolution.alignment.TaxonSet">
    <alignment idref="alignment.1"/>
</taxa>

<!-- specify tip dates -->
<traitSet id="dateTrait" spec="beast.base.evolution.tree.TraitSet"
  taxa="@taxonSet" traitname="date-forward" value="0=40"/>

<!-- specify tip types -->
<traitSet id="typeTrait" spec="feast.fileio.TraitSetFromXSV" fileName="Trees/$(prototype)/tree_$(seed).types.csv" sep=","
  taxa="@taxonSet" traitname="type"/>


<!-- run MCMC -->
<run id="mcmc" spec="beast.base.inference.MCMC" chainLength="100000000">

  <operatorschedule spec="beast.base.evolution.operator.kernel.BactrianOperatorSchedule"/>

  <!-- 1. define state node -->
  <state id="state" spec="beast.base.inference.State" storeEvery="5000">

    <!-- build starting tree -->
    <stateNode id="tree" spec="typewriter.evolution.tree.startingTree"
      rootHeight="40" taxa="@alignment.1" scarringHeight="30" scarringDuration="20" sequencesAreClustered="false">
      <taxonset idref="taxonSet"/>
      <trait idref="dateTrait"/>
    </stateNode>

    <!-- editing model parameters -->
    <parameter id="insertProbs" spec="beast.base.inference.parameter.RealParameter"
      lower="0.0" name="stateNode" upper="10">
      0.0109 0.0266 0.0690 0.0018 0.0707 0.0803 0.2657 0.0038 0.0445 0.0106 0.1265 0.1935 0.0961
    </parameter>

    <parameter id="editRate" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="10" value="0.01"/>

    <!-- population process parameters -->
    <parameter id="birthRate" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="Infinity" value="0.5 0.5 0.5 0.5"/>

    <parameter id="deathRate" spec="beast.base.inference.parameter.RealParameter"
      dimension="1" lower="0.0" name="stateNode" upper="Infinity" value="0.01 0.01 0.01 0.01"/>

      <parameter id="migrationRate.distinct" spec="beast.base.inference.parameter.RealParameter"
        name="stateNode" upper="1"
        value="  0.05 0.05 0.05
               0   0 0
               0 0   0
               0 0 0 "/> <!-- distinct types  -->

      <parameter id="migrationRate.hierarchical" spec="beast.base.inference.parameter.RealParameter"
        name="stateNode" upper="1"
        value="  0.05 0 0
               0   0.05 0
               0 0   0.05
               0 0 0     "/> <!-- hierarchical types -->

    <parameter id="rho" spec="beast.base.inference.parameter.RealParameter"
      lower="0.0" name="stateNode" upper="1.0" value="0.1 0.1 0.1 0.1"/>  <!-- sampling proportion -->

    <!-- fix origin to experiment duration
    40.001 is chosen because the starting tree class sets the tree height to 40.0 and the origin has to be > than the tree heigth -->
    <parameter id="origin" spec="beast.base.inference.parameter.RealParameter"
      lower="40.0" name="stateNode" upper="40.001" value="40.001"/>

  </state>


  <!-- for initialization repeats -->
  <init spec="feast.parameter.InitRandomRealParameter" initial="@birthRate">
      <Uniform name="distr" lower="0.05" upper="0.5"/>
  </init>

  <init spec="feast.parameter.InitRandomRealParameter" initial="@deathRate">
      <Uniform name="distr" lower="0" upper="0.1"/>
  </init>

  <init spec="feast.parameter.InitRandomRealParameter" initial="@editRate">
      <Uniform name="distr" lower="0" upper="0.25"/>
  </init>


  <!-- 2. define distributions -->
  <distribution id="posterior" spec="beast.base.inference.CompoundDistribution">

    <!-- PRIORS -->
    <distribution id="prior" spec="beast.base.inference.CompoundDistribution" useThreads='true'>

      <!-- tree prior -->
      <distribution id="birthDeathMigration" spec="bdmmprime.distribution.BirthDeathMigrationDistribution"
        conditionOnSurvival="True" frequencies="1.0 0 0 0" tree="@tree"
        typeTraitSet="@typeTrait" storeNodeTypes="true">

        <parameterization spec="bdmmprime.parameterization.CanonicalParameterization"
          processLength="@origin">

          <typeSet id="typeSet" spec="bdmmprime.parameterization.TypeSet" value="0,1,2,3" typeTraitSet="@typeTrait"/>

          <birthRate spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="@birthRate" timesAreAges="false"/>
          <deathRate spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="@deathRate" timesAreAges="false"/>
          <migrationRate spec="bdmmprime.parameterization.SkylineMatrixParameter"
            skylineValues="@migrationRate.$(prototype)" timesAreAges="false"/>

          <!-- no sampling through time -->
          <samplingRate spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="0 0 0 0" timesAreAges="false"/>
          <rhoSampling spec="bdmmprime.parameterization.TimedParameter"
            times="0" timesAreAges="true" processLength="@origin" values="@rho"/>
          <removalProb spec="bdmmprime.parameterization.SkylineVectorParameter"
            skylineValues="1 1 1 1" timesAreAges="false"/>

        </parameterization>
      </distribution>

      <!-- prior on substitution model parameters -->
      <prior id="editRatePrior" name="distribution" x="@editRate" spec="bdmmprime.util.priors.SmartZeroExcludingPrior">
        <LogNormal id="editLogNormal" name="distr" M="-3" S="1"/></prior> <!-- [0.01, 0.26] -->

      <!-- prior on phylodynamic parameters -->
      <prior id="birthRatePrior" name="distribution" x="@birthRate" spec="bdmmprime.util.priors.SmartZeroExcludingPrior">
        <LogNormal id="birthLogNormal" name="distr" M="-1.5" S="1"/></prior> <!-- [0.04, 1.16] -->

      <prior id="deathRatePrior" name="distribution" x="@deathRate">
        <Exponential id="deathExp" name="distr" mean="0.04"/></prior> <!-- [0.002, 0.12] -->

      <prior id="migrationRatePrior" name="distribution" x="@migrationRate.$(prototype)" spec="bdmmprime.util.priors.SmartZeroExcludingPrior">
        <LogNormal id="migrationLogNormal" name="distr" M="-3.25" S="1"/></prior> <!-- [0.007, 0.2] -->

    </distribution>

    <!-- Tree likelihood -->
    <distribution id="likelihood" spec="beast.base.inference.CompoundDistribution" useThreads='true'>

      <plate var="n" range="1:20">
        <distribution id="treeLikelihood.$(n)" spec="typewriter.evolution.likelihood.TypewriterTreeLikelihood"
          data="@alignment.$(n)" tree="@tree" useScaling="true" arrayLength="5" origin="@origin">

          <!-- Typewriter substitution model -->
          <siteModel spec="beast.base.evolution.sitemodel.SiteModel">
            <mutationRate idref="editRate"/>
            <substModel spec="typewriter.evolution.substitutionmodel.TypewriterSubstitutionModel"
              editProbabilities="@insertProbs">
              <frequencies spec="beast.base.evolution.substitutionmodel.Frequencies"
                frequencies="1.0 0 0 0 0 0 0 0 0 0 0 0 0 0" estimate="false"/>
            </substModel>
          </siteModel>

          <branchRateModel spec="beast.base.evolution.branchratemodel.StrictClockModel" clock.rate="1.0"/>
        </distribution>
      </plate>
    </distribution>
  </distribution>


  <!-- 3. define operators-->
  <!-- tree operators -->
  <operator spec="beast.base.evolution.operator.WilsonBalding" tree="@tree" weight="30.0"/>
  <operator spec="beast.base.evolution.operator.Uniform" tree="@tree" weight="30.0"/>
  <operator spec="beast.base.evolution.operator.SubtreeSlide" tree="@tree" weight="3.0"/>
  <operator spec="beast.base.evolution.operator.Exchange" isNarrow="false" tree="@tree" weight="30.0"/>
  <operator spec="beast.base.evolution.operator.ScaleOperator" rootOnly="true" tree="@tree" weight="3.0"/>

  <!-- substitution model operators -->
  <operator id="editRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@editRate" scaleFactor="0.8" weight="3.0"/>

  <!-- phylodynamic operators -->
  <operator id="birthRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@birthRate" scaleFactor="0.8" weight="3.0"/>
  <operator id="deathRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@deathRate" scaleFactor="0.8" weight="3.0"/>
  <operator id="migrationRateScaler" spec="beast.base.evolution.operator.ScaleOperator"
    parameter="@migrationRate.$(prototype)" scaleFactor="0.8" weight="3.0"/>

  <operator id="udBD" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="10.0">
    <up idref="birthRate"/>
    <down idref="deathRate"/>
  </operator>

  <operator id="uuBD" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="10.0">
    <up idref="birthRate"/>
    <up idref="deathRate"/>
  </operator>

  <operator id="udMM" spec="beast.base.inference.operator.UpDownOperator"
    scaleFactor="0.8" weight="10.0" elementWise="true" differentRandomIndex="true">
    <up idref="migrationRate.$(prototype)"/>
    <down idref="migrationRate.$(prototype)"/>
  </operator>

  <operator id="udMD" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="3.0">
    <up idref="migrationRate.$(prototype)"/>
    <down idref="deathRate"/>
  </operator>

  <operator id="udMB" spec="beast.base.inference.operator.UpDownOperator" scaleFactor="0.8" weight="3.0">
    <up idref="migrationRate.$(prototype)"/>
    <down idref="birthRate"/>
  </operator>


  <!-- 4. define loggers -->
  <!-- trace logger -->
  <logger id="tracelog" spec="beast.base.inference.Logger" fileName="Typewriter/$(prototype)/inferenceOutput/tree_$(seed).inference.log" logEvery="5000">
    <log idref="posterior"/>
    <log idref="likelihood"/>
    <log idref="prior"/>

    <!-- tree parameter logger -->
    <plate var="n" range="1:20">
      <log idref="treeLikelihood.$(n)"/>
    </plate>
    <log id="treeStats" spec="beast.base.evolution.tree.TreeStatLogger" tree="@tree"/>

    <!-- substitution and phylodynamic parameter logger -->
    <log idref="editRate" />
    <log idref="birthRate"/>
    <log idref="deathRate"/>
    <log idref="migrationRate.$(prototype)"/>
  </logger>

  <!-- screen logger -->
  <logger id="screenlog" spec="beast.base.inference.Logger" logEvery="1000">
    <log idref="posterior"/>
    <log id="ESS" spec="beast.base.inference.util.ESS" arg="@posterior"/>
    <log idref="likelihood"/>
    <log idref="prior"/>
  </logger>

  <!-- tree logger -->
  <logger id="treelog" spec="beast.base.inference.Logger" fileName="Typewriter/$(prototype)/inferenceOutput/tree_$(seed).inference.trees" logEvery="5000" mode="tree">
    <log idref="tree" printMetaData="true"/>
  </logger>

</run>

</beast>
